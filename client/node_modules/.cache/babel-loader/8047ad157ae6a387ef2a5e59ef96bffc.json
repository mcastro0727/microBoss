{"ast":null,"code":"import _classCallCheck from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react'; //import { Form, Button, Container } from 'react-bootstrap'\n\nimport API from '../../utils/API';\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm() {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this));\n\n    _this.handleChange = function (e) {\n      var fields = _this.state.fields;\n      fields[e.target.name] = e.target.value;\n\n      _this.setState({\n        fields: fields\n      });\n    };\n\n    _this.submitForm = function (e) {\n      e.preventDefault();\n\n      if (_this.projectForm()) {\n        var fields = {};\n        fields[\"projectTitle\"] = \"\";\n        fields[\"creator\"] = \"\";\n        fields[\"startDate\"] = \"\";\n        fields[\"deadLine\"] = \"\";\n      }\n    };\n\n    _this.state = {\n      fields: {},\n      errors: {}\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.submitForm = _this.submitForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  return ProjectForm;\n}(React.Component);\n\nexport default ProjectForm;\n/*\nclass ProjectForm extends React.Component {\n\n    // STATE\n        state = {\n            projectTitle:'',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            workTime: '',\n            commitment: ''\n        }\n    // handleInputChange\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.creator && this.state.title && this.state.startDate && this.state.deadLine) {\n            API.saveProject({\n                title: this.state.projectTitle,\n                creator: this.state.creator,\n                startDate: this.state.startDate,\n                deadLine: this.state.deadLine\n            })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n        };\n    };\n    \n    \n    \n    render() {\n        return (\n            <React.Fragment>\n            <Container>\n            \n            <Form>\n            <Form.Group controlId=\"formUserName\">\n            <Form.Label>Project Administrator</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"Enter username\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formProjectTitle\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                type=\"text\" \n                placeholder=\"What are you working on?\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When was this assigned?\"\n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formDeadLine\">\n                <Form.Label>Deadline</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When is this to be completed by?\"\n                />\n                </Form.Group>\n                <Form.Group controlId=\"formWorkData\">\n                <Form.Label>Hours worked per week?</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"work hours\" \n                />\n                <Form.Label>User Commitment</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"How many hours can you devote per day to this project?\" \n                />\n                </Form.Group>\n                \n                \n                <Form.Group controlId=\"formAddCollabz\">\n                <Form.Label>Collaborators</Form.Label>\n                <Form.Control as=\"select\">\n                <option>select...</option>\n                <option>...</option>\n                </Form.Control>\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleFormSubmit}>\n                Submit\n                </Button>\n                </Form>\n                </Container>\n                \n                </React.Fragment>\n                );\n            };\n            \n            \n        }\n        \n        export default ProjectForm\n        */","map":{"version":3,"sources":["/Users/james/Desktop/REACT_APPS/react-prac-two/client/src/components/ProjectForm/ProjectForm.js"],"names":["React","API","ProjectForm","handleChange","e","fields","state","target","name","value","setState","submitForm","preventDefault","projectForm","errors","bind","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;IAGMC,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;;AADU,UAYdC,YAZc,GAYC,UAACC,CAAD,EAAO;AAClB,UAAIC,MAAM,GAAG,MAAKC,KAAL,CAAWD,MAAxB;AACAA,MAAAA,MAAM,CAACD,CAAC,CAACG,MAAF,CAASC,IAAV,CAAN,GAAwBJ,CAAC,CAACG,MAAF,CAASE,KAAjC;;AACA,YAAKC,QAAL,CAAc;AACVL,QAAAA,MAAM,EAANA;AADU,OAAd;AAGH,KAlBa;;AAAA,UAoBdM,UApBc,GAoBD,UAACP,CAAD,EAAO;AAChBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,UAAI,MAAKC,WAAL,EAAJ,EAAwB;AACpB,YAAIR,MAAM,GAAG,EAAb;AACAA,QAAAA,MAAM,CAAC,cAAD,CAAN,GAAyB,EAAzB;AACAA,QAAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,EAApB;AACAA,QAAAA,MAAM,CAAC,WAAD,CAAN,GAAsB,EAAtB;AACAA,QAAAA,MAAM,CAAC,UAAD,CAAN,GAAqB,EAArB;AAEH;AACJ,KA9Ba;;AAEV,UAAKC,KAAL,GAAa;AACTD,MAAAA,MAAM,EAAE,EADC;AAETS,MAAAA,MAAM,EAAE;AAFC,KAAb;AAKA,UAAKX,YAAL,GAAoB,MAAKA,YAAL,CAAkBY,IAAlB,uDAApB;AACA,UAAKJ,UAAL,GAAkB,MAAKA,UAAL,CAAgBI,IAAhB,uDAAlB;AARU;AAUb;;;EAXqBf,KAAK,CAACgB,S;;AAqChC,eAAed,WAAf;AASA","sourcesContent":["import React from 'react'\n//import { Form, Button, Container } from 'react-bootstrap'\nimport API from '../../utils/API'\n\n\nclass ProjectForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n\n    };\n\n    handleChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.projectForm()) {\n            let fields = {};\n            fields[\"projectTitle\"] = \"\";\n            fields[\"creator\"] = \"\";\n            fields[\"startDate\"] = \"\";\n            fields[\"deadLine\"] = \"\";\n            \n        }\n    }\n\n\n\n\n}\nexport default ProjectForm\n\n\n\n\n\n\n\n\n/*\nclass ProjectForm extends React.Component {\n\n    // STATE\n        state = {\n            projectTitle:'',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            workTime: '',\n            commitment: ''\n        }\n    // handleInputChange\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.creator && this.state.title && this.state.startDate && this.state.deadLine) {\n            API.saveProject({\n                title: this.state.projectTitle,\n                creator: this.state.creator,\n                startDate: this.state.startDate,\n                deadLine: this.state.deadLine\n            })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n        };\n    };\n    \n    \n    \n    render() {\n        return (\n            <React.Fragment>\n            <Container>\n            \n            <Form>\n            <Form.Group controlId=\"formUserName\">\n            <Form.Label>Project Administrator</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"Enter username\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formProjectTitle\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                type=\"text\" \n                placeholder=\"What are you working on?\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When was this assigned?\"\n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formDeadLine\">\n                <Form.Label>Deadline</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When is this to be completed by?\"\n                />\n                </Form.Group>\n                <Form.Group controlId=\"formWorkData\">\n                <Form.Label>Hours worked per week?</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"work hours\" \n                />\n                <Form.Label>User Commitment</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"How many hours can you devote per day to this project?\" \n                />\n                </Form.Group>\n                \n                \n                <Form.Group controlId=\"formAddCollabz\">\n                <Form.Label>Collaborators</Form.Label>\n                <Form.Control as=\"select\">\n                <option>select...</option>\n                <option>...</option>\n                </Form.Control>\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleFormSubmit}>\n                Submit\n                </Button>\n                </Form>\n                </Container>\n                \n                </React.Fragment>\n                );\n            };\n            \n            \n        }\n        \n        export default ProjectForm\n        */\n        \n        "]},"metadata":{},"sourceType":"module"}