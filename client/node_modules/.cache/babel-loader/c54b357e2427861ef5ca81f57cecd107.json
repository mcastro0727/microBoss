{"ast":null,"code":"import _defineProperty from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/james/Desktop/project3-11-19/client/src/components/ProjectForm/ProjectForm.js\";\nimport React from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport API from '../../utils/API';\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjectForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      projectTitle: '',\n      creator: '',\n      startDate: '',\n      deadLine: ''\n    };\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n      API.saveProject({\n        projectTitle: _this.state.initialFormData.projectTitle,\n        creator: _this.state.initialFormData.creator,\n        startDate: _this.state.initialFormData.startDate,\n        deadLine: _this.state.initialFormData.deadLine\n      }).then(function (res) {\n        return console.log(res.data);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formUserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Project Administrator\"), React.createElement(Form.Control, {\n        name: \"creator\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formProjectTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Form.Control, {\n        name: \"projectTitle\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"What are you working on?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formStartDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Form.Control, {\n        name: \"startDate\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When was this assigned?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formDeadLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(Form.Control, {\n        name: \"deadLine\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When is this to be completed by?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\n\nexport default ProjectForm;\n/*\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // hold results\n            projects:[],\n            // db params\n            creator: null,\n            projectTitle: null,\n            startDate: null,\n            deadLine: null\n        }\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n\n\n    }\n\n    handleInputChange = (e) => {\n        e.preventDefault();\n        // grab the keypressEvent\n        //console.log(e);\n        console.log(e.target.name);\n        console.log(e.target.value);\n    }\n\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n\n\n                    <h1>Enter your info below!</h1>\n\n                    <form onSubmit={this.handleFormSubmit}>\n                        <p><input type=\"text\" placeholder=\"enter username\" name=\"creator\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Project Title\" name=\"projectTitle\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Start Date\" name=\"startDate\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Deadline\" name=\"deadLine\" onChange={this.handleInputChange} /></p>\n                        <p><button>Submit Project!</button></p>\n                    </form>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n}\nexport default ProjectForm\n\n*/\n\n/*\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: {\n                projectTitle: '',\n                creator: '',\n                startDate: '',\n                deadLine: ''\n            }\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleSubmit(e) {\n        alert(\"Form has been successfully submitted! :: \"+this.state.value.projectTitle);\n        e.preventDefault();\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n\n                    <form method=\"post\" onSubmit={this.handleSubmit} >\n                        <input type=\"text\" value={this.state.value.projectTitle} onChange={this.handleChange} placeholder=\"Project Title\" /> <br/>\n                        <input type=\"text\" value={this.state.value.creator} onChange={this.handleChange} placeholder=\"Username\" /> <br/>\n                        <input type=\"text\" value={this.state.value.startDate} onChange={this.handleChange} placeholder=\"Start Date\" /> <br/>\n                        <input type=\"text\" value={this.state.value.deadLine} onChange={this.handleChange} placeholder=\"Due Date\" /> <br/>\n                        <br/>\n                        <input type=\"submit\" vlaue=\"submit\" />\n                    </form>\n\n\n            </React.Fragment>\n        )\n    }\n\n\n}\nexport default ProjectForm\n*/\n\n/*\nclass ProjectForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n\n    };\n\n    handleChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.projectForm()) {\n            let fields = {};\n            fields[\"projectTitle\"] = \"\";\n            fields[\"creator\"] = \"\";\n            fields[\"startDate\"] = \"\";\n            fields[\"deadLine\"] = \"\";\n            this.setState({ fields: fields });\n            alert(\"PROJECT SUBMITTED!\")\n        };\n    }\n\n    projectForm = () => {\n        let fields = this.state.fields;\n        let errors = {};\n        let isFormValid = true;\n\n        if (!fields['creator']) {\n            isFormValid = false;\n            errors[\"creator\"] = \"* Please Enter username!\";\n        }\n        if (typeof fields[\"creator\"] !== \"undefined\") {\n            if (!fields[\"creator\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"creator\"] = \"*  please add aplhabetical characters!\";\n            }\n        }\n\n\n        if (!fields[\"projectTitle\"]) {\n            isFormValid = false;\n            errors[\"projectTitle\"] = \"* Please define the title of the project!\";\n        }\n        if (typeof fields[\"projectTitle\"] !== \"undefined\") {\n            if (!fields[\"projectTitle\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"projectTitle\"] = \"* please user alphabetical characters only!\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return isFormValid;\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div id=\"register\">\n\n                <h3>Enter Details Below</h3>\n                <form method=\"post\" name=\"userProjectForm\" onSubmit={this.submitForm}>\n                    <label>Username:</label>\n                    <input type=\"text\" name=\"creator\" value={this.state.fields.creator} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.creator}</div>\n\n                    <label>Project Title</label>\n                    <input type=\"text\" name=\"projectTitle\" value={this.state.fields.projectTitle} />\n                        <div className=\"errorMsg\">{this.state.errors.projectTitle}</div>\n\n                    <label>Start Date</label>\n                    <input type=\"text\" name=\"startDate\" value={this.state.fields.startDate} onChange={this.handleChange} />\n                    <br/>\n                    <label>Dead Line</label>\n                    <input type=\"text\" name=\"deadLine\" value={this.state.fields.deadLine} onChange={this.handleChange} />\n                    <br/>\n                    <input  style={{ marginLeft: '15.8%' }} type=\"submit\" className=\"button\" value=\"Register\"/>\n\n\n                </form>\n\n\n                </div>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n\n}\nexport default ProjectForm\n*/\n// /\\ ATT::2 /\\\n// \\/ ATT::1 \\/","map":{"version":3,"sources":["/Users/james/Desktop/project3-11-19/client/src/components/ProjectForm/ProjectForm.js"],"names":["React","Form","Button","Container","API","ProjectForm","state","projectTitle","creator","startDate","deadLine","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","saveProject","initialFormData","then","res","console","log","data","catch","err","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Button, Container } from 'react-bootstrap'\nimport API from '../../utils/API'\n\n\nclass ProjectForm extends React.Component {\n\n    // STATE\n    state = {\n\n\n        projectTitle: '',\n        creator: '',\n        startDate: '',\n        deadLine: ''\n\n\n    }\n    // handleInputChange\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n\n        API.saveProject({\n            projectTitle: this.state.initialFormData.projectTitle,\n            creator: this.state.initialFormData.creator,\n            startDate: this.state.initialFormData.startDate,\n            deadLine: this.state.initialFormData.deadLine\n        })\n            .then(res => console.log(res.data))\n            .catch(err => console.log(err));\n\n    };\n\n\n\n    render() {\n        return (\n            <React.Fragment>\n                <Container>\n\n                    <Form>\n                        <Form.Group controlId=\"formUserName\">\n                            <Form.Label>Project Administrator</Form.Label>\n                            <Form.Control\n                                name=\"creator\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"Enter username\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formProjectTitle\">\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control\n                                name=\"projectTitle\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"What are you working on?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formStartDate\">\n                            <Form.Label>Start Date</Form.Label>\n                            <Form.Control\n                                name=\"startDate\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"When was this assigned?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formDeadLine\">\n                            <Form.Label>Deadline</Form.Label>\n                            <Form.Control\n                                name=\"deadLine\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"When is this to be completed by?\"\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleFormSubmit} >\n                            Submit\n                </Button>\n                    </Form>\n                </Container>\n\n            </React.Fragment>\n        );\n    };\n\n\n}\n\nexport default ProjectForm\n\n\n\n/*\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            // hold results\n            projects:[],\n            // db params\n            creator: null,\n            projectTitle: null,\n            startDate: null,\n            deadLine: null\n        }\n    }\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n\n\n    }\n\n    handleInputChange = (e) => {\n        e.preventDefault();\n        // grab the keypressEvent\n        //console.log(e);\n        console.log(e.target.name);\n        console.log(e.target.value);\n    }\n\n\n\n    render() {\n\n        return(\n            <React.Fragment>\n\n\n                    <h1>Enter your info below!</h1>\n\n                    <form onSubmit={this.handleFormSubmit}>\n                        <p><input type=\"text\" placeholder=\"enter username\" name=\"creator\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Project Title\" name=\"projectTitle\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Start Date\" name=\"startDate\" onChange={this.handleInputChange} /></p>\n                        <p><input type=\"text\" placeholder=\"Deadline\" name=\"deadLine\" onChange={this.handleInputChange} /></p>\n                        <p><button>Submit Project!</button></p>\n                    </form>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n}\nexport default ProjectForm\n\n*/\n\n\n\n\n\n\n\n\n/*\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: {\n                projectTitle: '',\n                creator: '',\n                startDate: '',\n                deadLine: ''\n            }\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleSubmit(e) {\n        alert(\"Form has been successfully submitted! :: \"+this.state.value.projectTitle);\n        e.preventDefault();\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n\n                    <form method=\"post\" onSubmit={this.handleSubmit} >\n                        <input type=\"text\" value={this.state.value.projectTitle} onChange={this.handleChange} placeholder=\"Project Title\" /> <br/>\n                        <input type=\"text\" value={this.state.value.creator} onChange={this.handleChange} placeholder=\"Username\" /> <br/>\n                        <input type=\"text\" value={this.state.value.startDate} onChange={this.handleChange} placeholder=\"Start Date\" /> <br/>\n                        <input type=\"text\" value={this.state.value.deadLine} onChange={this.handleChange} placeholder=\"Due Date\" /> <br/>\n                        <br/>\n                        <input type=\"submit\" vlaue=\"submit\" />\n                    </form>\n\n\n            </React.Fragment>\n        )\n    }\n\n\n}\nexport default ProjectForm\n*/\n\n\n/*\nclass ProjectForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n\n    };\n\n    handleChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.projectForm()) {\n            let fields = {};\n            fields[\"projectTitle\"] = \"\";\n            fields[\"creator\"] = \"\";\n            fields[\"startDate\"] = \"\";\n            fields[\"deadLine\"] = \"\";\n            this.setState({ fields: fields });\n            alert(\"PROJECT SUBMITTED!\")\n        };\n    }\n\n    projectForm = () => {\n        let fields = this.state.fields;\n        let errors = {};\n        let isFormValid = true;\n\n        if (!fields['creator']) {\n            isFormValid = false;\n            errors[\"creator\"] = \"* Please Enter username!\";\n        }\n        if (typeof fields[\"creator\"] !== \"undefined\") {\n            if (!fields[\"creator\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"creator\"] = \"*  please add aplhabetical characters!\";\n            }\n        }\n\n\n        if (!fields[\"projectTitle\"]) {\n            isFormValid = false;\n            errors[\"projectTitle\"] = \"* Please define the title of the project!\";\n        }\n        if (typeof fields[\"projectTitle\"] !== \"undefined\") {\n            if (!fields[\"projectTitle\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"projectTitle\"] = \"* please user alphabetical characters only!\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return isFormValid;\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div id=\"register\">\n\n                <h3>Enter Details Below</h3>\n                <form method=\"post\" name=\"userProjectForm\" onSubmit={this.submitForm}>\n                    <label>Username:</label>\n                    <input type=\"text\" name=\"creator\" value={this.state.fields.creator} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.creator}</div>\n\n                    <label>Project Title</label>\n                    <input type=\"text\" name=\"projectTitle\" value={this.state.fields.projectTitle} />\n                        <div className=\"errorMsg\">{this.state.errors.projectTitle}</div>\n\n                    <label>Start Date</label>\n                    <input type=\"text\" name=\"startDate\" value={this.state.fields.startDate} onChange={this.handleChange} />\n                    <br/>\n                    <label>Dead Line</label>\n                    <input type=\"text\" name=\"deadLine\" value={this.state.fields.deadLine} onChange={this.handleChange} />\n                    <br/>\n                    <input  style={{ marginLeft: '15.8%' }} type=\"submit\" className=\"button\" value=\"Register\"/>\n\n\n                </form>\n\n\n                </div>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n\n}\nexport default ProjectForm\n*/\n\n\n// /\\ ATT::2 /\\\n\n\n// \\/ ATT::1 \\/\n\n"]},"metadata":{},"sourceType":"module"}