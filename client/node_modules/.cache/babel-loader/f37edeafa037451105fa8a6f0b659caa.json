{"ast":null,"code":"import _defineProperty from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/james/Desktop/project3-11-19/client/src/components/ProfileGrid/ProfileGrid.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './style.css';\nimport API from '../../utils/API'; //import UserProjectScope from '../UserProjectScope'\n//import ProjectForm from '../ProjectForm'\n\nimport { Form, Button } from 'react-bootstrap';\nimport ProjectDetails from '../ProjectDetails';\nimport { ProjectList } from '../ProjList';\n\nvar ProfileGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileGrid, _React$Component);\n\n  function ProfileGrid(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileGrid).call(this, props));\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        projects: []\n      });\n\n      console.log(_this.state);\n      API.saveProject({\n        projectTitle: _this.state.projectTitle,\n        creator: _this.state.creator,\n        startDate: _this.state.startDate,\n        deadLine: _this.state.deadLine,\n        todos: _this.state.todos,\n        assignee: _this.state.assignee\n      }).then(function (obj) {\n        return console.log(obj);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      window.location.reload();\n    };\n\n    _this.getProjects = function () {\n      API.getProjects().then(function (e) {\n        return _this.setState({\n          userProjects: e.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.toggleData = function () {\n      _this.setState({\n        clickedPDBtn: false,\n        clickedFBtn: true\n      });\n\n      console.log(_this.state.clickedFBtn);\n      console.log(_this.state.clickedPDBtn);\n    };\n\n    _this.toggleForm = function () {\n      _this.setState({\n        clickedFBtn: false,\n        clickedPDBtn: true\n      });\n\n      console.log(_this.state.clickedFBtn);\n      console.log(_this.state.clickedPDBtn);\n    };\n\n    _this.state = {\n      userProjects: [],\n      clickedPDBtn: true,\n      projectTitle: '',\n      creator: '',\n      startDate: '',\n      deadLine: '',\n      todos: '',\n      assignee: '',\n      clickedFBtn: true\n    };\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(ProfileGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n      console.log(this.state.userProjects);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var projects = this.state.userProjects;\n      console.log(projects);\n      var detailBtn = this.state.clickedPDBtn;\n      var formBtn = this.state.clickedFBtn;\n      console.log(\"-------\\n\\nshow_ProjectDetail: \".concat(detailBtn, \"\\n--------\\n\\nshow_Form: \").concat(formBtn));\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftpane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Project List\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"btn-success\",\n        type: \"button\",\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Create New Project\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(ProjectList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, projects.map(function (project) {\n        return React.createElement(\"button\", {\n          className: \"btn-warning\",\n          type: \"button\",\n          key: project.id,\n          onClick: _this2.toggleData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, project.projectTitle);\n      }))), React.createElement(\"div\", {\n        className: \"middlepane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Project Form\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Form, {\n        hidden: formBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formUserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Project Administrator\"), React.createElement(Form.Control, {\n        name: \"creator\",\n        value: this.state.creator,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formProjectTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Form.Control, {\n        name: \"projectTitle\",\n        value: this.state.projectTitle,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"What are you working on?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formStartDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Form.Control, {\n        name: \"startDate\",\n        value: this.state.startDate,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When was this assigned?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formDeadLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(Form.Control, {\n        name: \"deadLine\",\n        value: this.state.deadLine,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When is this to be completed by?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formObjectives\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, \"Task at Hand\"), React.createElement(Form.Control, {\n        name: \"todos\",\n        value: this.state.todos,\n        onChange: this.handleInputChange,\n        type: \"textarea\",\n        placeholder: \"TODO\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formObjectives\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Assignee\"), React.createElement(Form.Control, {\n        name: \"assignee\",\n        value: this.state.assignee,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Who's doing this task?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(\"div\", {\n        className: \"details\",\n        hidden: detailBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"projectTitle: ...\", projects.projectTitle), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"creator: ...\", projects.creator), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"startDate: ...\", projects.startDate), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"deadLine: ...\", projects.deadLine), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"TODOS: ...\", projects.todos), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"assignee: ...\", projects.assignee)))));\n    }\n  }]);\n\n  return ProfileGrid;\n}(React.Component);\n\nexport default ProfileGrid;","map":{"version":3,"sources":["/Users/james/Desktop/project3-11-19/client/src/components/ProfileGrid/ProfileGrid.js"],"names":["React","Component","Container","API","Form","Button","ProjectDetails","ProjectList","ProfileGrid","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","projects","console","log","state","saveProject","projectTitle","creator","startDate","deadLine","todos","assignee","then","obj","catch","err","window","location","reload","getProjects","userProjects","data","toggleData","clickedPDBtn","clickedFBtn","toggleForm","detailBtn","formBtn","map","project","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport './style.css'\nimport API from '../../utils/API';\n//import UserProjectScope from '../UserProjectScope'\n//import ProjectForm from '../ProjectForm'\nimport { Form, Button } from 'react-bootstrap'\nimport ProjectDetails from '../ProjectDetails'\nimport { ProjectList } from '../ProjList'\n\n\nclass ProfileGrid extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userProjects: [],\n            clickedPDBtn: true,\n\n            projectTitle: '',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            todos: '',\n            assignee: '',\n            clickedFBtn: true\n        }\n        console.log(props)\n\n    }\n\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ projects: [] });\n        console.log(this.state);\n\n        API.saveProject({\n            projectTitle: this.state.projectTitle,\n            creator: this.state.creator,\n            startDate: this.state.startDate,\n            deadLine: this.state.deadLine,\n            todos: this.state.todos,\n            assignee: this.state.assignee\n        })\n\n            .then(obj => console.log(obj))\n            .catch(err => console.log(err));\n\n        window.location.reload();\n    };\n\n\n\n    componentDidMount() {\n\n        this.getProjects();\n        console.log(this.state.userProjects)\n    }\n\n    getProjects = () => {\n\n        API.getProjects()\n            .then(e =>\n                this.setState({\n                    userProjects: e.data\n                })\n            )\n            .catch(err => console.log(err));\n\n    }\n\n\n\n    // method for hide form, show data\n    toggleData = () => {\n        this.setState({\n            clickedPDBtn: false,\n            clickedFBtn: true\n        })\n        console.log(this.state.clickedFBtn);\n        console.log(this.state.clickedPDBtn)\n    }\n    // method for hide data, show form\n    toggleForm = () => {\n        this.setState({\n            clickedFBtn: false,\n            clickedPDBtn: true\n        })\n        console.log(this.state.clickedFBtn);\n        console.log(this.state.clickedPDBtn)\n    }\n\n\n\n    render() {\n        const projects = this.state.userProjects;\n        console.log(projects);\n\n        const detailBtn = this.state.clickedPDBtn;\n        const formBtn = this.state.clickedFBtn;\n\n        console.log(`-------\\n\\nshow_ProjectDetail: ${detailBtn}\\n--------\\n\\nshow_Form: ${formBtn}`)\n\n\n\n        return (\n            <React.Fragment>\n                <Container>\n                    <div className=\"leftpane\">\n                        <h1>Project List</h1>\n                        <br />\n                        <button\n                            className=\"btn-success\"\n                            type=\"button\"\n                            onClick={this.toggleForm}>Create New Project</button>\n                        <br />\n                        <br />\n                        <ProjectList>\n                            {projects.map((project) => {\n                                return (\n                                    <button\n                                        className=\"btn-warning\"\n                                        type='button'\n                                        key={project.id}\n                                        onClick={this.toggleData}>{project.projectTitle}</button>\n                                )\n                            })}\n                        </ProjectList>\n                    </div>\n\n                    <div className=\"middlepane\">\n                        <h1>Project Form</h1> <br />\n                        {/* \\/ this form just needs a 'hidden' property to then be changed\n                            to be able to change the rendered component onClick!!!! \n                        */}\n                        <Form hidden={formBtn}>\n                            <Form.Group controlId=\"formUserName\">\n                                <Form.Label>Project Administrator</Form.Label>\n                                <Form.Control\n                                    name=\"creator\"\n                                    value={this.state.creator}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"Enter username\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formProjectTitle\">\n                                <Form.Label>Project Name</Form.Label>\n                                <Form.Control\n                                    name=\"projectTitle\"\n                                    value={this.state.projectTitle}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"What are you working on?\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formStartDate\">\n                                <Form.Label>Start Date</Form.Label>\n                                <Form.Control\n                                    name=\"startDate\"\n                                    value={this.state.startDate}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"When was this assigned?\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formDeadLine\">\n                                <Form.Label>Deadline</Form.Label>\n                                <Form.Control\n                                    name=\"deadLine\"\n                                    value={this.state.deadLine}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"When is this to be completed by?\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formObjectives\">\n                                <Form.Label>Task at Hand</Form.Label>\n                                <Form.Control\n                                    name=\"todos\"\n                                    value={this.state.todos}\n                                    onChange={this.handleInputChange}\n                                    type=\"textarea\"\n                                    placeholder=\"TODO\"\n                                />\n\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formObjectives\">\n                                <Form.Label>Assignee</Form.Label>\n                                <Form.Control\n                                    name=\"assignee\"\n                                    value={this.state.assignee}\n                                    onChange={this.handleInputChange}\n                                    type=\"text\"\n                                    placeholder=\"Who's doing this task?\"\n                                />\n\n                            </Form.Group>\n\n                            <Button variant=\"primary\" type=\"submit\" onClick={this.handleFormSubmit} >\n                                Submit\n                </Button>\n                        </Form>\n\n                        <div className=\"details\" hidden={detailBtn} >\n                            <h5>projectTitle: ...{projects.projectTitle}</h5>\n                            <p>creator: ...{projects.creator}</p>\n                            <p>startDate: ...{projects.startDate}</p>\n                            <p>deadLine: ...{projects.deadLine}</p>\n                            <p>TODOS: ...{projects.todos}</p>\n                            <p>assignee: ...{projects.assignee}</p>\n                        </div>\n\n                    </div>\n\n\n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default ProfileGrid\n\n\n"]},"metadata":{},"sourceType":"module"}