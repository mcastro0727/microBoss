{"ast":null,"code":"import _classCallCheck from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/james/Desktop/REACT_APPS/react-prac-two/client/src/components/ProjectForm/ProjectForm.js\";\nimport React from 'react'; //import { Form, Button, Container } from 'react-bootstrap'\n\nimport API from '../../utils/API';\n\nvar ProjectForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProjectForm, _React$Component);\n\n  function ProjectForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectForm).call(this, props));\n    _this.state = {\n      value: {\n        projectTitle: '',\n        creator: '',\n        startDate: '',\n        deadLine: ''\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ProjectForm, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        value: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      alert(\"Form has been successfully submitted! :: \" + this.state.value);\n      e.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        method: \"post\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value.projectTitle,\n        onChange: this.handleChange,\n        placeholder: \"Project Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value.creator,\n        onChange: this.handleChange,\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value.startDate,\n        onChange: this.handleChange,\n        placeholder: \"Start Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value.deadLine,\n        onChange: this.handleChange,\n        placeholder: \"Due Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        vlaue: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ProjectForm;\n}(React.Component);\n\nexport default ProjectForm;\n/*\nclass ProjectForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n\n    };\n\n    handleChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.projectForm()) {\n            let fields = {};\n            fields[\"projectTitle\"] = \"\";\n            fields[\"creator\"] = \"\";\n            fields[\"startDate\"] = \"\";\n            fields[\"deadLine\"] = \"\";\n            this.setState({ fields: fields });\n            alert(\"PROJECT SUBMITTED!\")\n        };\n    }\n\n    projectForm = () => {\n        let fields = this.state.fields;\n        let errors = {};\n        let isFormValid = true;\n\n        if (!fields['creator']) {\n            isFormValid = false;\n            errors[\"creator\"] = \"* Please Enter username!\";\n        }\n        if (typeof fields[\"creator\"] !== \"undefined\") {\n            if (!fields[\"creator\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"creator\"] = \"*  please add aplhabetical characters!\";\n            }\n        }\n\n\n        if (!fields[\"projectTitle\"]) {\n            isFormValid = false;\n            errors[\"projectTitle\"] = \"* Please define the title of the project!\";\n        }\n        if (typeof fields[\"projectTitle\"] !== \"undefined\") {\n            if (!fields[\"projectTitle\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"projectTitle\"] = \"* please user alphabetical characters only!\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return isFormValid;\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div id=\"register\">\n\n                <h3>Enter Details Below</h3>\n                <form method=\"post\" name=\"userProjectForm\" onSubmit={this.submitForm}>\n                    <label>Username:</label>\n                    <input type=\"text\" name=\"creator\" value={this.state.fields.creator} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.creator}</div>\n\n                    <label>Project Title</label>\n                    <input type=\"text\" name=\"projectTitle\" value={this.state.fields.projectTitle} />\n                        <div className=\"errorMsg\">{this.state.errors.projectTitle}</div>\n\n                    <label>Start Date</label>\n                    <input type=\"text\" name=\"startDate\" value={this.state.fields.startDate} onChange={this.handleChange} />\n                    <br/>\n                    <label>Dead Line</label>\n                    <input type=\"text\" name=\"deadLine\" value={this.state.fields.deadLine} onChange={this.handleChange} />     \n                    <br/>\n                    <input  style={{ marginLeft: '15.8%' }} type=\"submit\" className=\"button\" value=\"Register\"/>\n\n\n                </form>\n\n\n                </div>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n\n}\nexport default ProjectForm\n*/\n// /\\ ATT::2 /\\\n// \\/ ATT::1 \\/\n\n/*\nclass ProjectForm extends React.Component {\n\n    // STATE\n        state = {\n            projectTitle:'',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            workTime: '',\n            commitment: ''\n        }\n    // handleInputChange\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.creator && this.state.title && this.state.startDate && this.state.deadLine) {\n            API.saveProject({\n                title: this.state.projectTitle,\n                creator: this.state.creator,\n                startDate: this.state.startDate,\n                deadLine: this.state.deadLine\n            })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n        };\n    };\n    \n    \n    \n    render() {\n        return (\n            <React.Fragment>\n            <Container>\n            \n            <Form>\n            <Form.Group controlId=\"formUserName\">\n            <Form.Label>Project Administrator</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"Enter username\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formProjectTitle\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                type=\"text\" \n                placeholder=\"What are you working on?\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When was this assigned?\"\n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formDeadLine\">\n                <Form.Label>Deadline</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When is this to be completed by?\"\n                />\n                </Form.Group>\n                <Form.Group controlId=\"formWorkData\">\n                <Form.Label>Hours worked per week?</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"work hours\" \n                />\n                <Form.Label>User Commitment</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"How many hours can you devote per day to this project?\" \n                />\n                </Form.Group>\n                \n                \n                <Form.Group controlId=\"formAddCollabz\">\n                <Form.Label>Collaborators</Form.Label>\n                <Form.Control as=\"select\">\n                <option>select...</option>\n                <option>...</option>\n                </Form.Control>\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleFormSubmit}>\n                Submit\n                </Button>\n                </Form>\n                </Container>\n                \n                </React.Fragment>\n                );\n            };\n            \n            \n        }\n        \n        export default ProjectForm\n        */","map":{"version":3,"sources":["/Users/james/Desktop/REACT_APPS/react-prac-two/client/src/components/ProjectForm/ProjectForm.js"],"names":["React","API","ProjectForm","props","state","value","projectTitle","creator","startDate","deadLine","handleChange","bind","handleSubmit","e","setState","target","alert","preventDefault","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AACHC,QAAAA,YAAY,EAAE,EADX;AAEHC,QAAAA,OAAO,EAAE,EAFN;AAGHC,QAAAA,SAAS,EAAE,EAHR;AAIHC,QAAAA,QAAQ,EAAE;AAJP;AADE,KAAb;AAQA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AAXe;AAYlB;;;;iCAEYE,C,EAAG;AACZ,WAAKC,QAAL,CAAc;AAAET,QAAAA,KAAK,EAAEQ,CAAC,CAACE,MAAF,CAASV;AAAlB,OAAd;AACH;;;iCAEYQ,C,EAAG;AACZG,MAAAA,KAAK,CAAC,8CAA4C,KAAKZ,KAAL,CAAWC,KAAxD,CAAL;AACAQ,MAAAA,CAAC,CAACI,cAAF;AACH;;;6BAGQ;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAM,QAAA,MAAM,EAAC,MAAb;AAAoB,QAAA,QAAQ,EAAE,KAAKL,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,KAAX,CAAiBC,YAA3C;AAAyD,QAAA,QAAQ,EAAE,KAAKI,YAAxE;AAAsF,QAAA,WAAW,EAAC,eAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,OACyH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADzH,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBE,OAA3C;AAAoD,QAAA,QAAQ,EAAE,KAAKG,YAAnE;AAAiF,QAAA,WAAW,EAAC,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,OAE+G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF/G,EAGI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBG,SAA3C;AAAsD,QAAA,QAAQ,EAAE,KAAKE,YAArE;AAAmF,QAAA,WAAW,EAAC,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,OAGmH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHnH,EAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBI,QAA3C;AAAqD,QAAA,QAAQ,EAAE,KAAKC,YAApE;AAAkF,QAAA,WAAW,EAAC,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,OAIgH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJhH,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CAFR,CADJ;AAeH;;;;EA1CqBV,KAAK,CAACkB,S;;AA8ChC,eAAehB,WAAf;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AAGA;;AAEA","sourcesContent":["import React from 'react'\n//import { Form, Button, Container } from 'react-bootstrap'\nimport API from '../../utils/API'\n\nclass ProjectForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: {\n                projectTitle: '',\n                creator: '',\n                startDate: '',\n                deadLine: ''\n            }\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ value: e.target.value });\n    }\n\n    handleSubmit(e) {\n        alert(\"Form has been successfully submitted! :: \"+this.state.value);\n        e.preventDefault();\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n\n                    <form method=\"post\" onSubmit={this.handleSubmit} >\n                        <input type=\"text\" value={this.state.value.projectTitle} onChange={this.handleChange} placeholder=\"Project Title\" /> <br/>\n                        <input type=\"text\" value={this.state.value.creator} onChange={this.handleChange} placeholder=\"Username\" /> <br/>\n                        <input type=\"text\" value={this.state.value.startDate} onChange={this.handleChange} placeholder=\"Start Date\" /> <br/>\n                        <input type=\"text\" value={this.state.value.deadLine} onChange={this.handleChange} placeholder=\"Due Date\" /> <br/>\n                        <br/>\n                        <input type=\"submit\" vlaue=\"submit\" />\n                    </form>\n\n\n            </React.Fragment>\n        )\n    }\n\n\n}\nexport default ProjectForm\n\n\n\n\n/*\nclass ProjectForm extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {}\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitForm = this.submitForm.bind(this);\n\n    };\n\n    handleChange = (e) => {\n        let fields = this.state.fields;\n        fields[e.target.name] = e.target.value;\n        this.setState({\n            fields\n        });\n    }\n\n    submitForm = (e) => {\n        e.preventDefault();\n        if (this.projectForm()) {\n            let fields = {};\n            fields[\"projectTitle\"] = \"\";\n            fields[\"creator\"] = \"\";\n            fields[\"startDate\"] = \"\";\n            fields[\"deadLine\"] = \"\";\n            this.setState({ fields: fields });\n            alert(\"PROJECT SUBMITTED!\")\n        };\n    }\n\n    projectForm = () => {\n        let fields = this.state.fields;\n        let errors = {};\n        let isFormValid = true;\n\n        if (!fields['creator']) {\n            isFormValid = false;\n            errors[\"creator\"] = \"* Please Enter username!\";\n        }\n        if (typeof fields[\"creator\"] !== \"undefined\") {\n            if (!fields[\"creator\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"creator\"] = \"*  please add aplhabetical characters!\";\n            }\n        }\n\n\n        if (!fields[\"projectTitle\"]) {\n            isFormValid = false;\n            errors[\"projectTitle\"] = \"* Please define the title of the project!\";\n        }\n        if (typeof fields[\"projectTitle\"] !== \"undefined\") {\n            if (!fields[\"projectTitle\"].match(/^[a-zA-z ]*$/)) {\n                isFormValid = false;\n                errors[\"projectTitle\"] = \"* please user alphabetical characters only!\";\n            }\n        }\n\n        this.setState({\n            errors: errors\n        });\n        return isFormValid;\n\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <div id=\"register\">\n\n                <h3>Enter Details Below</h3>\n                <form method=\"post\" name=\"userProjectForm\" onSubmit={this.submitForm}>\n                    <label>Username:</label>\n                    <input type=\"text\" name=\"creator\" value={this.state.fields.creator} onChange={this.handleChange} />\n                        <div className=\"errorMsg\">{this.state.errors.creator}</div>\n\n                    <label>Project Title</label>\n                    <input type=\"text\" name=\"projectTitle\" value={this.state.fields.projectTitle} />\n                        <div className=\"errorMsg\">{this.state.errors.projectTitle}</div>\n\n                    <label>Start Date</label>\n                    <input type=\"text\" name=\"startDate\" value={this.state.fields.startDate} onChange={this.handleChange} />\n                    <br/>\n                    <label>Dead Line</label>\n                    <input type=\"text\" name=\"deadLine\" value={this.state.fields.deadLine} onChange={this.handleChange} />     \n                    <br/>\n                    <input  style={{ marginLeft: '15.8%' }} type=\"submit\" className=\"button\" value=\"Register\"/>\n\n\n                </form>\n\n\n                </div>\n\n\n\n            </React.Fragment>\n        )\n    }\n\n\n\n}\nexport default ProjectForm\n*/\n\n\n// /\\ ATT::2 /\\\n\n\n// \\/ ATT::1 \\/\n\n/*\nclass ProjectForm extends React.Component {\n\n    // STATE\n        state = {\n            projectTitle:'',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            workTime: '',\n            commitment: ''\n        }\n    // handleInputChange\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    // handleFormSubmit\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        if (this.state.creator && this.state.title && this.state.startDate && this.state.deadLine) {\n            API.saveProject({\n                title: this.state.projectTitle,\n                creator: this.state.creator,\n                startDate: this.state.startDate,\n                deadLine: this.state.deadLine\n            })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n        };\n    };\n    \n    \n    \n    render() {\n        return (\n            <React.Fragment>\n            <Container>\n            \n            <Form>\n            <Form.Group controlId=\"formUserName\">\n            <Form.Label>Project Administrator</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"Enter username\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formProjectTitle\">\n                <Form.Label>Project Name</Form.Label>\n                <Form.Control\n                type=\"text\" \n                placeholder=\"What are you working on?\" \n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formStartDate\">\n                <Form.Label>Start Date</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When was this assigned?\"\n                />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formDeadLine\">\n                <Form.Label>Deadline</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"When is this to be completed by?\"\n                />\n                </Form.Group>\n                <Form.Group controlId=\"formWorkData\">\n                <Form.Label>Hours worked per week?</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"work hours\" \n                />\n                <Form.Label>User Commitment</Form.Label>\n                <Form.Control \n                type=\"text\" \n                placeholder=\"How many hours can you devote per day to this project?\" \n                />\n                </Form.Group>\n                \n                \n                <Form.Group controlId=\"formAddCollabz\">\n                <Form.Label>Collaborators</Form.Label>\n                <Form.Control as=\"select\">\n                <option>select...</option>\n                <option>...</option>\n                </Form.Control>\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\" onSubmit={this.handleFormSubmit}>\n                Submit\n                </Button>\n                </Form>\n                </Container>\n                \n                </React.Fragment>\n                );\n            };\n            \n            \n        }\n        \n        export default ProjectForm\n        */\n        \n        "]},"metadata":{},"sourceType":"module"}