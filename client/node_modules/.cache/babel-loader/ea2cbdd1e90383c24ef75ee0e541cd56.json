{"ast":null,"code":"import _defineProperty from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/james/Desktop/project3-11-19/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/james/Desktop/project3-11-19/client/src/components/ProfileGrid/ProfileGrid.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './style.css';\nimport API from '../../utils/API'; //import UserProjectScope from '../UserProjectScope'\n\nimport ProjectForm from '../ProjectForm';\nimport ProjectDetails from '../ProjectDetails';\n\nvar ProfileGrid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileGrid, _React$Component);\n\n  function ProfileGrid(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileGrid).call(this, props));\n\n    _this.handleInputChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        projects: []\n      });\n\n      console.log(_this.state);\n      API.saveProject({\n        projectTitle: _this.state.projectTitle,\n        creator: _this.state.creator,\n        startDate: _this.state.startDate,\n        deadLine: _this.state.deadLine,\n        todos: _this.state.todos,\n        assignee: _this.state.assignee\n      }).then(function (obj) {\n        return console.log(obj);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      window.location.reload();\n    };\n\n    _this.getProjects = function () {\n      API.getProjects().then(function (e) {\n        return _this.setState({\n          userProjects: e.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      userProjects: [],\n      detailShow: false,\n      projectTitle: '',\n      creator: '',\n      startDate: '',\n      deadLine: '',\n      todos: '',\n      assignee: '',\n      isActive: false\n    };\n    console.log(props);\n    return _this;\n  }\n\n  _createClass(ProfileGrid, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProjects();\n      console.log(this.state.userProjects);\n    }\n  }, {\n    key: \"render\",\n    // method for hide form, show data\n    // method for hide data, show form\n    value: function render() {\n      var projects = this.state.userProjects;\n      console.log(projects);\n      var Details = React.createElement(ProjectDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftpane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Project List\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Create New Project\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), projects.map(function (project) {\n        return React.createElement(\"button\", {\n          type: \"button\",\n          key: project.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, project.projectTitle);\n      })), React.createElement(\"div\", {\n        className: \"middlepane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Project Form\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formUserName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Project Administrator\"), React.createElement(Form.Control, {\n        name: \"creator\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Enter username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formProjectTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Project Name\"), React.createElement(Form.Control, {\n        name: \"projectTitle\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"What are you working on?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formStartDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Start Date\"), React.createElement(Form.Control, {\n        name: \"startDate\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When was this assigned?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formDeadLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Deadline\"), React.createElement(Form.Control, {\n        name: \"deadLine\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"When is this to be completed by?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formObjectives\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Task at Hand\"), React.createElement(Form.Control, {\n        name: \"todos\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"TODO\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formObjectives\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Assignee\"), React.createElement(Form.Control, {\n        name: \"assignee\",\n        onChange: this.handleInputChange,\n        type: \"text\",\n        placeholder: \"Who's doing this task?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return ProfileGrid;\n}(React.Component);\n\nexport default ProfileGrid;","map":{"version":3,"sources":["/Users/james/Desktop/project3-11-19/client/src/components/ProfileGrid/ProfileGrid.js"],"names":["React","Component","Container","API","ProjectForm","ProjectDetails","ProfileGrid","props","handleInputChange","e","target","name","value","setState","handleFormSubmit","preventDefault","projects","console","log","state","saveProject","projectTitle","creator","startDate","deadLine","todos","assignee","then","obj","catch","err","window","location","reload","getProjects","userProjects","data","detailShow","isActive","Details","map","project","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Container } from 'react-bootstrap'\nimport './style.css'\nimport API from '../../utils/API';\n//import UserProjectScope from '../UserProjectScope'\nimport ProjectForm from '../ProjectForm'\nimport ProjectDetails from '../ProjectDetails'\n\n\nclass ProfileGrid extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userProjects: [],\n            detailShow: false,\n\n            projectTitle: '',\n            creator: '',\n            startDate: '',\n            deadLine: '',\n            todos: '',\n            assignee: '',\n            isActive: false\n        }\n        console.log(props)\n        \n    }\n\n    handleInputChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n     // handleFormSubmit\n     handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.setState({ projects: [] });\n        console.log(this.state);\n        \n        API.saveProject({\n            projectTitle: this.state.projectTitle,\n            creator: this.state.creator,\n            startDate: this.state.startDate,\n            deadLine: this.state.deadLine,\n            todos: this.state.todos,\n            assignee: this.state.assignee\n        })\n            \n            .then(obj => console.log(obj))\n            .catch(err => console.log(err));\n\n            window.location.reload();\n    };\n\n\n\n    componentDidMount() {\n\n       this.getProjects();\n        console.log(this.state.userProjects)\n    }\n\n    getProjects = () => {\n        \n        API.getProjects()\n            .then(e => \n                this.setState({ \n                    userProjects: e.data\n                 })\n            )\n            .catch(err => console.log(err));\n\n    }\n\n    \n\n    // method for hide form, show data\n    // method for hide data, show form\n\n   \n\n    render() {\n        const projects = this.state.userProjects;\n        console.log(projects)\n        const Details = <ProjectDetails />\n        \n        return (\n            <React.Fragment>\n                <Container>\n                    <div className=\"leftpane\"><h1>Project List</h1> <br />\n                        <button type=\"button\" >Create New Project</button>\n                        <br />\n                        <br/>\n                        {projects.map((project) => {\n                            return (\n                                <button type='button' key={project.id}>{project.projectTitle}</button>\n                            )\n                            })}\n                    </div>\n\n                    <div className=\"middlepane\"><h1>Project Form</h1> <br />\n                    <Form>\n                        <Form.Group controlId=\"formUserName\">\n                            <Form.Label>Project Administrator</Form.Label>\n                            <Form.Control\n                                name=\"creator\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"Enter username\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formProjectTitle\">\n                            <Form.Label>Project Name</Form.Label>\n                            <Form.Control\n                                name=\"projectTitle\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"What are you working on?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formStartDate\">\n                            <Form.Label>Start Date</Form.Label>\n                            <Form.Control\n                                name=\"startDate\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"When was this assigned?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formDeadLine\">\n                            <Form.Label>Deadline</Form.Label>\n                            <Form.Control\n                                name=\"deadLine\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"When is this to be completed by?\"\n                            />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formObjectives\">\n                            <Form.Label>Task at Hand</Form.Label>\n                            <Form.Control \n                                name=\"todos\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"TODO\"\n                            />\n\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formObjectives\">\n                            <Form.Label>Assignee</Form.Label>\n                            <Form.Control \n                                name=\"assignee\"\n                                onChange={this.handleInputChange}\n                                type=\"text\"\n                                placeholder=\"Who's doing this task?\"\n                            />\n\n                        </Form.Group>\n                        \n                        <Button variant=\"primary\" type=\"submit\" onClick={this.handleFormSubmit} >\n                            Submit\n                </Button>\n                    </Form>\n                        \n                    </div>\n\n                    \n                </Container>\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default ProfileGrid\n\n\n"]},"metadata":{},"sourceType":"module"}